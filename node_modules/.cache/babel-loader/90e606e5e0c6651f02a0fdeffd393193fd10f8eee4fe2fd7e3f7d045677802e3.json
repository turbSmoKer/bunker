{"ast":null,"code":"var _jsxFileName = \"C:\\\\bunker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/components/PlayerCard.jsx\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst randomValues = {\n  \"Здоровье\": [\"Абсолютно здоров(а)\", \"Хроническая болезнь астма\", \"Диабет\", \"Травма руки\", \"Травма ноги\", \"Слабое зрение\", \"Слабый иммунитет\", \"Психическое расстройство\", \"Склонность к алкоголизму\", \"Инвалидность\", \"Болезнь сердца\", \"Аллергия (на пыльцу, животных и т.д.)\", \"Бывший наркозависимый\", \"Проблемы с дыхательной системой\", \"Синдром хронической усталости\"],\n  \"Профессия\": [\"Врач-хирург\", \"Травматолог\", \"Психиатр\", \"Педиатр\", \"Агроном\", \"Лесник\", \"Электрик\", \"Сантехник\", \"Инженер-конструктор\", \"Инженер-химик\", \"Инженер-робототехник\", \"Архитектор\", \"Геолог\", \"Метеоролог\", \"Программист\", \"Системный администратор\", \"Веб-дизайнер\", \"Учитель математики\", \"Учитель физики\", \"Учитель литературы\", \"Повар\", \"Кондитер\", \"Бариста\", \"Официант\", \"Фермер\", \"Зоотехник\", \"Биолог\", \"Молекулярный биолог\", \"Химик\", \"Физик-ядерщик\", \"Военный инженер\", \"Солдат\", \"Снайпер\", \"Спасатель\", \"Водолаз\", \"Пилот самолета\", \"Машинист поезда\", \"Водитель грузовика\", \"Капитан судна\", \"Астроном\", \"Космонавт\", \"Журналист\", \"Писатель\", \"Художник\", \"Скульптор\", \"Музыкант\", \"Танцор\", \"Актер\", \"Фотограф\", \"Спортсмен (бегун)\", \"Альпинист\", \"Механик\", \"Ремонтник электроники\", \"Парикмахер\", \"Визажист\", \"Юрист\", \"Экономист\", \"Политолог\", \"Менеджер по продажам\", \"Тату-мастер\", \"Режиссер\", \"Сценарист\", \"Акушер\", \"Судмедэксперт\", \"Моряк\", \"Кузнец\", \"Ювелир\", \"Лаборант\", \"Радиоинженер\", \"Логист\", \"Картограф\", \"Палеонтолог\", \"Криминалист\", \"Рекрутер\", \"Рекламщик\", \"Социальный работник\", \"Эколог\", \"Эксперт по криптовалютам\", \"Геймдизайнер\", \"Тренер по фитнесу\", \"Оператор дронов\", \"Строитель мостов\", \"Плотник\", \"Технолог пищевой промышленности\", \"Пчеловод\", \"Садовник\", \"Гид-переводчик\", \"Эксперт по биомеханике\", \"Вулканолог\", \"Астролог\", \"Эксперт по криптографии\", \"Киберспециалист\", \"Дегустатор\", \"Фермер-грибовод\", \"Косметолог\", \"Риэлтор\", \"Флорист\", \"Зоолог\", \"Дрессировщик животных\"],\n  \"Возраст\": [\"18\", \"25\", \"35\", \"32\", \"21\", \"27\", \"70\", \"85\", \"73\", \"41\", \"12\", \"16\", \"25\", \"62\", \"31\", \"15\", \"64\", \"43\", \"75\", \"31\", \"35\", \"86\"],\n  \"Хобби\": [\"Скалолазание\", \"Рыбалка\", \"Рисование\", \"Танцы\", \"Йога\", \"Охота\", \"Чтение\", \"Автомеханика\", \"Выращивание растений\", \"Игра на гитаре\", \"Плавание\", \"Шахматы\", \"Коллекционирование монет\", \"Лыжный спорт\", \"Видеоигры\", \"Кулинария\", \"Боевые искусства\", \"Стрельба из лука\", \"Фехтование\", \"Путешествия\", \"Каллиграфия\", \"Садоводство\", \"Гончарное дело\", \"Изготовление свечей\", \"Рукоделие (вышивка, вязание)\", \"Стрельба из огнестрельного оружия\", \"Собирательство грибов\", \"Метание ножей\", \"Изучение иностранных языков\", \"Работа с деревом\"],\n  \"Фобии\": [\"Арахнофобия (боязнь пауков)\", \"Клаустрофобия (боязнь замкнутых пространств)\", \"Акрофобия (боязнь высоты)\", \"Патройофобия (боязнь наследственности)\", \"Гемофобия (боязнь крови)\", \"Социофобия (боязнь общества)\", \"Нозофобия (боязнь заболеть)\", \"Танатофобия (боязнь смерти)\", \"Аэрофобия (боязнь полетов)\", \"Гидрофобия (боязнь воды)\", \"Никтофобия (боязнь темноты)\", \"Фобофобия (боязнь фобий)\", \"Алгофобия (боязнь боли)\", \"Зоофобия (боязнь животных)\", \"Экзофобия (боязнь чужих людей)\"]\n};\nconst getRandomValue = type => {\n  const values = randomValues[type];\n  return values[Math.floor(Math.random() * values.length)];\n};\nconst PlayerCard = ({\n  id\n}) => {\n  _s();\n  const [isRevealed, setIsRevealed] = useState(false);\n  const [details, setDetails] = useState(() => {\n    return {\n      name: `Игрок ${id}`,\n      ...Object.fromEntries(Object.keys(randomValues).map(key => [key, getRandomValue(key)]))\n    };\n  });\n  const handleReveal = () => {\n    setIsRevealed(!isRevealed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: details.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isRevealed ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(details).map(([key, value]) => key !== \"name\" && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 45\n        }, this), \" \", value]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0440\\u0430\\u0441\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u0435\\u0442\\u0430\\u043B\\u0438.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReveal,\n      children: isRevealed ? \"Скрыть\" : \"Раскрыть\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerCard, \"Wn+4tuS16BLHjvRlYTIys5dzQNo=\");\n_c = PlayerCard;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"PlayerCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","randomValues","getRandomValue","type","values","Math","floor","random","length","PlayerCard","id","_s","isRevealed","setIsRevealed","details","setDetails","name","Object","fromEntries","keys","map","key","handleReveal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","value","onClick","_c","App","$RefreshReg$"],"sources":["C:/bunker/src/App.js"],"sourcesContent":["// src/components/PlayerCard.jsx\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst randomValues = {\n  \"Здоровье\": [\"Абсолютно здоров(а)\", \"Хроническая болезнь астма\", \"Диабет\", \"Травма руки\", \"Травма ноги\", \"Слабое зрение\", \"Слабый иммунитет\", \"Психическое расстройство\", \"Склонность к алкоголизму\", \"Инвалидность\", \"Болезнь сердца\", \"Аллергия (на пыльцу, животных и т.д.)\", \"Бывший наркозависимый\", \"Проблемы с дыхательной системой\", \"Синдром хронической усталости\"],\n  \"Профессия\": [\"Врач-хирург\", \"Травматолог\", \"Психиатр\", \"Педиатр\", \"Агроном\", \"Лесник\", \"Электрик\", \"Сантехник\", \"Инженер-конструктор\", \"Инженер-химик\", \"Инженер-робототехник\", \"Архитектор\", \"Геолог\", \"Метеоролог\", \"Программист\", \"Системный администратор\", \"Веб-дизайнер\", \"Учитель математики\", \"Учитель физики\", \"Учитель литературы\", \"Повар\", \"Кондитер\", \"Бариста\", \"Официант\", \"Фермер\", \"Зоотехник\", \"Биолог\", \"Молекулярный биолог\", \"Химик\", \"Физик-ядерщик\", \"Военный инженер\", \"Солдат\", \"Снайпер\", \"Спасатель\", \"Водолаз\", \"Пилот самолета\", \"Машинист поезда\", \"Водитель грузовика\", \"Капитан судна\", \"Астроном\", \"Космонавт\", \"Журналист\", \"Писатель\", \"Художник\", \"Скульптор\", \"Музыкант\", \"Танцор\", \"Актер\", \"Фотограф\", \"Спортсмен (бегун)\", \"Альпинист\", \"Механик\", \"Ремонтник электроники\", \"Парикмахер\", \"Визажист\", \"Юрист\", \"Экономист\", \"Политолог\", \"Менеджер по продажам\", \"Тату-мастер\", \"Режиссер\", \"Сценарист\", \"Акушер\", \"Судмедэксперт\", \"Моряк\", \"Кузнец\", \"Ювелир\", \"Лаборант\", \"Радиоинженер\", \"Логист\", \"Картограф\", \"Палеонтолог\", \"Криминалист\", \"Рекрутер\", \"Рекламщик\", \"Социальный работник\", \"Эколог\", \"Эксперт по криптовалютам\", \"Геймдизайнер\", \"Тренер по фитнесу\", \"Оператор дронов\", \"Строитель мостов\", \"Плотник\", \"Технолог пищевой промышленности\", \"Пчеловод\", \"Садовник\", \"Гид-переводчик\", \"Эксперт по биомеханике\", \"Вулканолог\", \"Астролог\", \"Эксперт по криптографии\", \"Киберспециалист\", \"Дегустатор\", \"Фермер-грибовод\", \"Косметолог\", \"Риэлтор\", \"Флорист\", \"Зоолог\", \"Дрессировщик животных\"],\n  \"Возраст\": [\"18\", \"25\", \"35\", \"32\", \"21\", \"27\", \"70\", \"85\", \"73\", \"41\", \"12\", \"16\", \"25\", \"62\", \"31\", \"15\", \"64\", \"43\", \"75\", \"31\", \"35\", \"86\"],\n  \"Хобби\": [\"Скалолазание\", \"Рыбалка\", \"Рисование\", \"Танцы\", \"Йога\", \"Охота\", \"Чтение\", \"Автомеханика\", \"Выращивание растений\", \"Игра на гитаре\", \"Плавание\", \"Шахматы\", \"Коллекционирование монет\", \"Лыжный спорт\", \"Видеоигры\", \"Кулинария\", \"Боевые искусства\", \"Стрельба из лука\", \"Фехтование\", \"Путешествия\", \"Каллиграфия\", \"Садоводство\", \"Гончарное дело\", \"Изготовление свечей\", \"Рукоделие (вышивка, вязание)\", \"Стрельба из огнестрельного оружия\", \"Собирательство грибов\", \"Метание ножей\", \"Изучение иностранных языков\", \"Работа с деревом\"],\n  \"Фобии\": [\"Арахнофобия (боязнь пауков)\", \"Клаустрофобия (боязнь замкнутых пространств)\", \"Акрофобия (боязнь высоты)\", \"Патройофобия (боязнь наследственности)\", \"Гемофобия (боязнь крови)\", \"Социофобия (боязнь общества)\", \"Нозофобия (боязнь заболеть)\", \"Танатофобия (боязнь смерти)\", \"Аэрофобия (боязнь полетов)\", \"Гидрофобия (боязнь воды)\", \"Никтофобия (боязнь темноты)\", \"Фобофобия (боязнь фобий)\", \"Алгофобия (боязнь боли)\", \"Зоофобия (боязнь животных)\", \"Экзофобия (боязнь чужих людей)\"]\n};\n\nconst getRandomValue = (type) => {\n  const values = randomValues[type];\n  return values[Math.floor(Math.random() * values.length)];\n};\n\nconst PlayerCard = ({ id }) => {\n  const [isRevealed, setIsRevealed] = useState(false);\n  const [details, setDetails] = useState(() => {\n    return {\n      name: `Игрок ${id}`,\n      ...Object.fromEntries(Object.keys(randomValues).map((key) => [key, getRandomValue(key)]))\n    };\n  });\n\n  const handleReveal = () => {\n    setIsRevealed(!isRevealed);\n  };\n\n  return (\n    <div className=\"player-card\">\n      <h2>{details.name}</h2>\n      {isRevealed ? (\n        <ul>\n          {Object.entries(details).map(([key, value]) => (\n            key !== \"name\" && <li key={key}><strong>{key}:</strong> {value}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>Нажмите, чтобы раскрыть детали.</p>\n      )}\n      <button onClick={handleReveal}>{isRevealed ? \"Скрыть\" : \"Раскрыть\"}</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,GAAG;EACnB,UAAU,EAAE,CAAC,qBAAqB,EAAE,2BAA2B,EAAE,QAAQ,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,cAAc,EAAE,gBAAgB,EAAE,uCAAuC,EAAE,uBAAuB,EAAE,iCAAiC,EAAE,+BAA+B,CAAC;EAC7W,WAAW,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,qBAAqB,EAAE,eAAe,EAAE,sBAAsB,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,yBAAyB,EAAE,cAAc,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,qBAAqB,EAAE,OAAO,EAAE,eAAe,EAAE,iBAAiB,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,eAAe,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,mBAAmB,EAAE,WAAW,EAAE,SAAS,EAAE,uBAAuB,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,sBAAsB,EAAE,aAAa,EAAE,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,WAAW,EAAE,qBAAqB,EAAE,QAAQ,EAAE,0BAA0B,EAAE,cAAc,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,SAAS,EAAE,iCAAiC,EAAE,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,YAAY,EAAE,UAAU,EAAE,yBAAyB,EAAE,iBAAiB,EAAE,YAAY,EAAE,iBAAiB,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,uBAAuB,CAAC;EAC99C,SAAS,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAC/I,OAAO,EAAE,CAAC,cAAc,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,sBAAsB,EAAE,gBAAgB,EAAE,UAAU,EAAE,SAAS,EAAE,0BAA0B,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,8BAA8B,EAAE,mCAAmC,EAAE,uBAAuB,EAAE,eAAe,EAAE,6BAA6B,EAAE,kBAAkB,CAAC;EAC1hB,OAAO,EAAE,CAAC,6BAA6B,EAAE,8CAA8C,EAAE,2BAA2B,EAAE,wCAAwC,EAAE,0BAA0B,EAAE,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,EAAE,4BAA4B,EAAE,0BAA0B,EAAE,6BAA6B,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,4BAA4B,EAAE,gCAAgC;AAC1e,CAAC;AAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;EAC/B,MAAMC,MAAM,GAAGH,YAAY,CAACE,IAAI,CAAC;EACjC,OAAOC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,MAAM,CAACI,MAAM,CAAC,CAAC;AAC1D,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IAC3C,OAAO;MACLkB,IAAI,EAAE,SAASN,EAAE,EAAE;MACnB,GAAGO,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,IAAI,CAAClB,YAAY,CAAC,CAACmB,GAAG,CAAEC,GAAG,IAAK,CAACA,GAAG,EAAEnB,cAAc,CAACmB,GAAG,CAAC,CAAC,CAAC;IAC1F,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBT,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEZ,OAAA;IAAKuB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BxB,OAAA;MAAAwB,QAAA,EAAKV,OAAO,CAACE;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtBhB,UAAU,gBACTZ,OAAA;MAAAwB,QAAA,EACGP,MAAM,CAACY,OAAO,CAACf,OAAO,CAAC,CAACM,GAAG,CAAC,CAAC,CAACC,GAAG,EAAES,KAAK,CAAC,KACxCT,GAAG,KAAK,MAAM,iBAAIrB,OAAA;QAAAwB,QAAA,gBAAcxB,OAAA;UAAAwB,QAAA,GAASH,GAAG,EAAC,GAAC;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,KAAK;MAAA,GAAnCT,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CACpE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAEL5B,OAAA;MAAAwB,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtC,eACD5B,OAAA;MAAQ+B,OAAO,EAAET,YAAa;MAAAE,QAAA,EAAEZ,UAAU,GAAG,QAAQ,GAAG;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5BIF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA8BhB,eAAewB,GAAG;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}