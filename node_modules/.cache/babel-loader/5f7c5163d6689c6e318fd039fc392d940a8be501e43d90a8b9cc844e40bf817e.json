{"ast":null,"code":"const attributesPool = {\n  health: [{\n    name: \"Остудное заболевание (простуда)\",\n    severity: 10\n  }, {\n    name: \"Грипп\",\n    severity: 10\n  }, {\n    name: \"Ангина (тонзиллит)\",\n    severity: 15\n  }, {\n    name: \"Бронхит\",\n    severity: 15\n  }, {\n    name: \"Гастрит\",\n    severity: 20\n  }, {\n    name: \"Диабет 2 типа\",\n    severity: 25\n  }, {\n    name: \"Гипертония (высокое давление)\",\n    severity: 30\n  }, {\n    name: \"Астма\",\n    severity: 30\n  }, {\n    name: \"Пневмония\",\n    severity: 40\n  }, {\n    name: \"Инсульт\",\n    severity: 50\n  }, {\n    name: \"Инфаркт миокарда\",\n    severity: 50\n  }, {\n    name: \"Рак кожи\",\n    severity: 70\n  }, {\n    name: \"Рак легких\",\n    severity: 70\n  }, {\n    name: \"Рак груди\",\n    severity: 70\n  }, {\n    name: \"Болезнь Альцгеймера\",\n    severity: 40\n  }, {\n    name: \"Паркинсон\",\n    severity: 40\n  }, {\n    name: \"Ревматоидный артрит\",\n    severity: 25\n  }, {\n    name: \"Туберкулез\",\n    severity: 30\n  }, {\n    name: \"Сердечная недостаточность\",\n    severity: 50\n  }, {\n    name: \"Цирроз печени\",\n    severity: 50\n  }, {\n    name: \"Печеночная недостаточность\",\n    severity: 50\n  }, {\n    name: \"Хроническая обструктивная болезнь легких (ХОБЛ)\",\n    severity: 40\n  }, {\n    name: \"Миокардит\",\n    severity: 30\n  }, {\n    name: \"Гепатит B\",\n    severity: 20\n  }, {\n    name: \"Гепатит C\",\n    severity: 30\n  }, {\n    name: \"Молниеносная инфекция (сепсис)\",\n    severity: 50\n  }, {\n    name: \"Менингит\",\n    severity: 40\n  }, {\n    name: \"Эпилепсия\",\n    severity: 25\n  }, {\n    name: \"Шизофрения\",\n    severity: 30\n  }, {\n    name: \"Психоз\",\n    severity: 30\n  }, {\n    name: \"Сахарный диабет 1 типа\",\n    severity: 30\n  }, {\n    name: \"Инфекционный мононуклеоз\",\n    severity: 20\n  }, {\n    name: \"Панкреатит\",\n    severity: 30\n  }, {\n    name: \"Псориаз\",\n    severity: 20\n  }, {\n    name: \"Склероз\",\n    severity: 30\n  }, {\n    name: \"Тромбофлебит\",\n    severity: 25\n  }, {\n    name: \"Полиартрит\",\n    severity: 30\n  }, {\n    name: \"Геморрой\",\n    severity: 10\n  }, {\n    name: \"Невралгия\",\n    severity: 15\n  }, {\n    name: \"Глаукома\",\n    severity: 20\n  }, {\n    name: \"Аллергия\",\n    severity: 10\n  }, {\n    name: \"Гастроэзофагеальная рефлюксная болезнь (ГЭРБ)\",\n    severity: 20\n  }, {\n    name: \"Хронический синусит\",\n    severity: 15\n  }, {\n    name: \"Псевдотумор мозга\",\n    severity: 40\n  }, {\n    name: \"Анемия\",\n    severity: 20\n  }, {\n    name: \"Паралич\",\n    severity: 50\n  }, {\n    name: \"Ожирение\",\n    severity: 25\n  }, {\n    name: \"Гепатит D\",\n    severity: 20\n  }, {\n    name: \"Токсоплазмоз\",\n    severity: 15\n  }, {\n    name: \"Хроническая усталость\",\n    severity: 15\n  }, {\n    name: \"Параноидальная шизофрения\",\n    severity: 30\n  }, {\n    name: \"Миастения\",\n    severity: 25\n  }, {\n    name: \"Тромбоцитопения\",\n    severity: 20\n  }, {\n    name: \"Туберкулез кожи\",\n    severity: 20\n  }, {\n    name: \"Псевдопаралич\",\n    severity: 40\n  }, {\n    name: \"Болезнь Крона\",\n    severity: 30\n  }, {\n    name: \"Цистит\",\n    severity: 15\n  }, {\n    name: \"Полимиозит\",\n    severity: 30\n  }, {\n    name: \"Гломерулонефрит\",\n    severity: 25\n  }, {\n    name: \"Кистозная фиброз\",\n    severity: 30\n  }, {\n    name: \"Склеродермия\",\n    severity: 30\n  }, {\n    name: \"Аутоиммунный тиреоидит\",\n    severity: 25\n  }, {\n    name: \"Гипотиреоз\",\n    severity: 20\n  }, {\n    name: \"Гипертиреоз\",\n    severity: 20\n  }, {\n    name: \"Печеночный рак\",\n    severity: 50\n  }, {\n    name: \"Ожог 3 степени\",\n    severity: 40\n  }, {\n    name: \"Миокардиальная ишемия\",\n    severity: 30\n  }, {\n    name: \"Инфекционный эндокардит\",\n    severity: 40\n  }, {\n    name: \"Мочекаменная болезнь\",\n    severity: 20\n  }, {\n    name: \"Гипогликемия\",\n    severity: 15\n  }],\n  profession: [\"Врач\", \"Инженер\", \"Учитель\", \"Художник\", \"Повар\", \"Программист\", \"Психолог\", \"Туристический гид\", \"Фотограф\", \"Архитектор\", \"Юрист\", \"Дизайнер\", \"Механик\", \"Стоматолог\", \"Педагог\", \"Музыкант\", \"Секретарь\", \"Журналист\", \"Менеджер\", \"Повар-кондитер\", \"Графический дизайнер\", \"Веб-разработчик\", \"Фармацевт\", \"Терапевт\", \"Физик\", \"Химик\", \"Экономист\", \"Математик\", \"Бухгалтер\", \"Актер\", \"Режиссер\", \"Писатель\", \"Педагог-психолог\", \"Тренер\", \"Логист\", \"Маркетолог\", \"Сварщик\", \"Операционный менеджер\", \"Риелтор\", \"Косметолог\", \"Бариста\", \"Техник\", \"Менеджер по продажам\", \"Кинолог\", \"Лесник\", \"Географ\", \"Историк\", \"Педагог-организатор\", \"Охранник\", \"Животновод\", \"Лаборант\", \"Психотерапевт\", \"Модель\", \"Массажист\", \"Дизайнер интерьеров\", \"Парикмахер\", \"Кондитер\", \"Водитель\", \"Техник по обслуживанию\", \"Специалист по PR\", \"Блогер\", \"Архивист\", \"Гид-переводчик\", \"Эколог\", \"Садовник\", \"Проектировщик\", \"Туроператор\", \"Палевед\", \"Оператор ПК\", \"Редактор\", \"Специалист по кадровым вопросам\", \"Аналитик\", \"Флорист\", \"Курьер\", \"Менеджер по работе с клиентами\", \"Картограф\", \"Генетик\", \"Дерматолог\"],\n  hobby: [\"Рисование\", \"Чтение\", \"Спорт\", \"Музыка\", \"Путешествия\", \"Готовка\", \"Фотография\", \"Плавание\", \"Велоспорт\", \"Йога\", \"Танцы\", \"Кулинария\", \"Путеводительство\", \"Садоводство\", \"Письмо\", \"Ремесла\", \"Рукоделие\", \"Вышивка\", \"Игры\", \"Бег\", \"Медитация\", \"Шитье\", \"Ремонт\", \"Кемпинг\", \"Путешествия по городам\", \"Скалодром\", \"Горные походы\", \"Кино\", \"Театр\", \"Картинг\", \"Серфинг\", \"Гольф\", \"Гардероб\", \"Рисование комиксов\", \"Скейтбординг\", \"Блогинг\", \"Путеводитель по культуре\", \"Заготовки на зиму\", \"Книголюб\", \"Творчество\", \"Стрит-арт\", \"Паркур\", \"Покер\", \"Путеводитель по уличной моде\", \"Ретро-игры\", \"Микроскопия\", \"Дрон-съемка\", \"Флешмоб\", \"Ретро-автомобили\", \"Моделирование\", \"Генеалогия\", \"Астрономия\", \"Театр теней\", \"Граффити\", \"Гипноз\", \"Бродяги\", \"Косплей\", \"Ретро-фото\", \"Этнография\", \"Реальные приключения\", \"Мифология\", \"Фетишизм моды\", \"Бодиарт\", \"Татуировки\", \"Психология отношений\", \"Фитнес-тренировки\", \"Сексуальное просвещение\", \"Психоанализ\", \"Фетиш-фото\", \"Ретро-игры для взрослых\", \"Танцы для взрослых\", \"Эксперименты с модой\", \"Театр импровизаций\", \"Реальные приключения\", \"Секс-позитивизм\", \"Фитнес и бодибилдинг\", \"Личностный рост\", \"Фетиш-фотография\"],\n  age: [\"18\", \"20\", \"25\", \"27\", \"30\", \"32\", \"35\", \"40\"],\n  phobia: [\"Замкнутые пространства\", \"Высота\", \"Темнота\", \"Насекомые\", \"Толпа\", \"Одиночество\", \"Пауки\", \"Змеи\", \"Собаки\", \"Гром\", \"Летучие мыши\", \"Вода\", \"Болезни\", \"Смерть\", \"Трупы\", \"Нечистая сила\", \"Магия\", \"Шум\", \"Клоуны\", \"Публичные выступления\", \"Боязнь людей\", \"Психопатия\", \"Потеря контроля\", \"Токсичные отношения\", \"Страх перед будущим\", \"Невозможность помочь\", \"Низкий уровень кислорода\", \"Боязнь потерять близких\", \"Незавершенность\", \"Технологии\", \"Перемены\", \"Восхождение на гору\", \"Крысы\", \"Молнии\", \"Забвение\", \"Невозможность быть собой\", \"Ожидание\", \"Отказ\", \"Скользкие поверхности\", \"Одиночество в толпе\", \"Тяжелые решения\", \"Глубокие водоемы\", \"Отсутствие звуков\", \"Потеря памяти\", \"Летящие объекты\", \"Силы природы\", \"Далекое будущее\", \"Невозможность двигаться\", \"Неизвестность\", \"Тени\", \"Силы темных искусств\", \"Заброшенные места\", \"Заболевания\", \"Болезни разума\"],\n  backpack: [\"18\", \"20\", \"25\", \"27\", \"30\", \"32\", \"35\", \"40\"],\n  fact: [\"18\", \"20\", \"25\", \"27\", \"30\", \"32\", \"35\", \"40\"]\n};\nlet usedAttributes = {\n  profession: new Set(),\n  hobby: new Set(),\n  age: new Set(),\n  phobia: new Set(),\n  health: new Set()\n};\nconst shuffleArray = array => {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n};\nconst generateRandomAttributes = () => {\n  const selectedAttributes = {};\n\n  // Для здоровья выбираем случайное заболевание и его тяжесть\n  const availableHealth = attributesPool.health.filter(item => !usedAttributes.health.has(item.name));\n  if (availableHealth.length === 0) {\n    selectedAttributes.health = null; // Если все заболевания использованы, ставим null\n  } else {\n    const shuffledHealth = shuffleArray(availableHealth);\n    const selectedHealth = shuffledHealth.pop();\n    selectedAttributes.health = {\n      disease: selectedHealth.name,\n      severity: selectedHealth.severity + \"%\"\n    };\n    usedAttributes.health.add(selectedHealth.name);\n  }\n\n  // Для других атрибутов выбираем случайное значение, исключая уже использованные\n  Object.keys(attributesPool).forEach(key => {\n    if (key !== \"health\") {\n      const availableValues = attributesPool[key].filter(value => !usedAttributes[key].has(value));\n      if (availableValues.length > 0) {\n        const shuffled = shuffleArray(availableValues);\n        const selectedValue = shuffled.pop();\n        selectedAttributes[key] = selectedValue;\n        usedAttributes[key].add(selectedValue); // Помечаем выбранное значение как использованное\n      } else {\n        selectedAttributes[key] = null; // Если все значения использованы, ставим null\n      }\n    }\n  });\n  return selectedAttributes;\n};\nexport default generateRandomAttributes;","map":{"version":3,"names":["attributesPool","health","name","severity","profession","hobby","age","phobia","backpack","fact","usedAttributes","Set","shuffleArray","array","shuffled","i","length","j","Math","floor","random","generateRandomAttributes","selectedAttributes","availableHealth","filter","item","has","shuffledHealth","selectedHealth","pop","disease","add","Object","keys","forEach","key","availableValues","value","selectedValue"],"sources":["C:/bunker/src/randomAttributes.jsx"],"sourcesContent":["const attributesPool = {\r\n    health: [\r\n      { name: \"Остудное заболевание (простуда)\", severity: 10 },\r\n      { name: \"Грипп\", severity: 10 },\r\n      { name: \"Ангина (тонзиллит)\", severity: 15 },\r\n      { name: \"Бронхит\", severity: 15 },\r\n      { name: \"Гастрит\", severity: 20 },\r\n      { name: \"Диабет 2 типа\", severity: 25 },\r\n      { name: \"Гипертония (высокое давление)\", severity: 30 },\r\n      { name: \"Астма\", severity: 30 },\r\n      { name: \"Пневмония\", severity: 40 },\r\n      { name: \"Инсульт\", severity: 50 },\r\n      { name: \"Инфаркт миокарда\", severity: 50 },\r\n      { name: \"Рак кожи\", severity: 70 },\r\n      { name: \"Рак легких\", severity: 70 },\r\n      { name: \"Рак груди\", severity: 70 },\r\n      { name: \"Болезнь Альцгеймера\", severity: 40 },\r\n      { name: \"Паркинсон\", severity: 40 },\r\n      { name: \"Ревматоидный артрит\", severity: 25 },\r\n      { name: \"Туберкулез\", severity: 30 },\r\n      { name: \"Сердечная недостаточность\", severity: 50 },\r\n      { name: \"Цирроз печени\", severity: 50 },\r\n      { name: \"Печеночная недостаточность\", severity: 50 },\r\n      { name: \"Хроническая обструктивная болезнь легких (ХОБЛ)\", severity: 40 },\r\n      { name: \"Миокардит\", severity: 30 },\r\n      { name: \"Гепатит B\", severity: 20 },\r\n      { name: \"Гепатит C\", severity: 30 },\r\n      { name: \"Молниеносная инфекция (сепсис)\", severity: 50 },\r\n      { name: \"Менингит\", severity: 40 },\r\n      { name: \"Эпилепсия\", severity: 25 },\r\n      { name: \"Шизофрения\", severity: 30 },\r\n      { name: \"Психоз\", severity: 30 },\r\n      { name: \"Сахарный диабет 1 типа\", severity: 30 },\r\n      { name: \"Инфекционный мононуклеоз\", severity: 20 },\r\n      { name: \"Панкреатит\", severity: 30 },\r\n      { name: \"Псориаз\", severity: 20 },\r\n      { name: \"Склероз\", severity: 30 },\r\n      { name: \"Тромбофлебит\", severity: 25 },\r\n      { name: \"Полиартрит\", severity: 30 },\r\n      { name: \"Геморрой\", severity: 10 },\r\n      { name: \"Невралгия\", severity: 15 },\r\n      { name: \"Глаукома\", severity: 20 },\r\n      { name: \"Аллергия\", severity: 10 },\r\n      { name: \"Гастроэзофагеальная рефлюксная болезнь (ГЭРБ)\", severity: 20 },\r\n      { name: \"Хронический синусит\", severity: 15 },\r\n      { name: \"Псевдотумор мозга\", severity: 40 },\r\n      { name: \"Анемия\", severity: 20 },\r\n      { name: \"Паралич\", severity: 50 },\r\n      { name: \"Ожирение\", severity: 25 },\r\n      { name: \"Гепатит D\", severity: 20 },\r\n      { name: \"Токсоплазмоз\", severity: 15 },\r\n      { name: \"Хроническая усталость\", severity: 15 },\r\n      { name: \"Параноидальная шизофрения\", severity: 30 },\r\n      { name: \"Миастения\", severity: 25 },\r\n      { name: \"Тромбоцитопения\", severity: 20 },\r\n      { name: \"Туберкулез кожи\", severity: 20 },\r\n      { name: \"Псевдопаралич\", severity: 40 },\r\n      { name: \"Болезнь Крона\", severity: 30 },\r\n      { name: \"Цистит\", severity: 15 },\r\n      { name: \"Полимиозит\", severity: 30 },\r\n      { name: \"Гломерулонефрит\", severity: 25 },\r\n      { name: \"Кистозная фиброз\", severity: 30 },\r\n      { name: \"Склеродермия\", severity: 30 },\r\n      { name: \"Аутоиммунный тиреоидит\", severity: 25 },\r\n      { name: \"Гипотиреоз\", severity: 20 },\r\n      { name: \"Гипертиреоз\", severity: 20 },\r\n      { name: \"Печеночный рак\", severity: 50 },\r\n      { name: \"Ожог 3 степени\", severity: 40 },\r\n      { name: \"Миокардиальная ишемия\", severity: 30 },\r\n      { name: \"Инфекционный эндокардит\", severity: 40 },\r\n      { name: \"Мочекаменная болезнь\", severity: 20 },\r\n      { name: \"Гипогликемия\", severity: 15 },\r\n    ],\r\n    profession: [\"Врач\", \"Инженер\", \"Учитель\", \"Художник\", \"Повар\", \"Программист\", \"Психолог\", \"Туристический гид\", \"Фотограф\", \"Архитектор\", \"Юрист\", \"Дизайнер\", \"Механик\", \"Стоматолог\", \"Педагог\", \"Музыкант\", \"Секретарь\", \"Журналист\", \"Менеджер\", \"Повар-кондитер\", \"Графический дизайнер\", \"Веб-разработчик\", \"Фармацевт\", \"Терапевт\", \"Физик\", \"Химик\", \"Экономист\", \"Математик\", \"Бухгалтер\", \"Актер\", \"Режиссер\", \"Писатель\", \"Педагог-психолог\", \"Тренер\", \"Логист\", \"Маркетолог\", \"Сварщик\", \"Операционный менеджер\", \"Риелтор\", \"Косметолог\", \"Бариста\", \"Техник\", \"Менеджер по продажам\", \"Кинолог\", \"Лесник\", \"Географ\", \"Историк\", \"Педагог-организатор\", \"Охранник\", \"Животновод\", \"Лаборант\", \"Психотерапевт\", \"Модель\", \"Массажист\", \"Дизайнер интерьеров\", \"Парикмахер\", \"Кондитер\", \"Водитель\", \"Техник по обслуживанию\", \"Специалист по PR\", \"Блогер\", \"Архивист\", \"Гид-переводчик\", \"Эколог\", \"Садовник\", \"Проектировщик\", \"Туроператор\", \"Палевед\", \"Оператор ПК\", \"Редактор\", \"Специалист по кадровым вопросам\", \"Аналитик\", \"Флорист\", \"Курьер\", \"Менеджер по работе с клиентами\", \"Картограф\", \"Генетик\", \"Дерматолог\"],\r\n    hobby: [\"Рисование\", \"Чтение\", \"Спорт\", \"Музыка\", \"Путешествия\", \"Готовка\", \"Фотография\", \"Плавание\", \"Велоспорт\", \"Йога\", \"Танцы\", \"Кулинария\", \"Путеводительство\", \"Садоводство\", \"Письмо\", \"Ремесла\", \"Рукоделие\", \"Вышивка\", \"Игры\", \"Бег\", \"Медитация\", \"Шитье\", \"Ремонт\", \"Кемпинг\", \"Путешествия по городам\", \"Скалодром\", \"Горные походы\", \"Кино\", \"Театр\", \"Картинг\", \"Серфинг\", \"Гольф\", \"Гардероб\", \"Рисование комиксов\", \"Скейтбординг\", \"Блогинг\", \"Путеводитель по культуре\", \"Заготовки на зиму\", \"Книголюб\", \"Творчество\", \"Стрит-арт\", \"Паркур\", \"Покер\", \"Путеводитель по уличной моде\", \"Ретро-игры\", \"Микроскопия\", \"Дрон-съемка\", \"Флешмоб\", \"Ретро-автомобили\", \"Моделирование\", \"Генеалогия\", \"Астрономия\", \"Театр теней\", \"Граффити\", \"Гипноз\", \"Бродяги\", \"Косплей\", \"Ретро-фото\", \"Этнография\", \"Реальные приключения\", \"Мифология\", \"Фетишизм моды\", \"Бодиарт\", \"Татуировки\", \"Психология отношений\", \"Фитнес-тренировки\", \"Сексуальное просвещение\", \"Психоанализ\", \"Фетиш-фото\", \"Ретро-игры для взрослых\", \"Танцы для взрослых\", \"Эксперименты с модой\", \"Театр импровизаций\", \"Реальные приключения\", \"Секс-позитивизм\", \"Фитнес и бодибилдинг\", \"Личностный рост\", \"Фетиш-фотография\"],\r\n    age: [\"18\", \"20\", \"25\", \"27\", \"30\", \"32\", \"35\", \"40\"],\r\n    phobia: [\"Замкнутые пространства\", \"Высота\", \"Темнота\", \"Насекомые\", \"Толпа\", \"Одиночество\", \"Пауки\", \"Змеи\", \"Собаки\", \"Гром\", \"Летучие мыши\", \"Вода\", \"Болезни\", \"Смерть\", \"Трупы\", \"Нечистая сила\", \"Магия\", \"Шум\", \"Клоуны\", \"Публичные выступления\", \"Боязнь людей\", \"Психопатия\", \"Потеря контроля\", \"Токсичные отношения\", \"Страх перед будущим\", \"Невозможность помочь\", \"Низкий уровень кислорода\", \"Боязнь потерять близких\", \"Незавершенность\", \"Технологии\", \"Перемены\", \"Восхождение на гору\", \"Крысы\", \"Молнии\", \"Забвение\", \"Невозможность быть собой\", \"Ожидание\", \"Отказ\", \"Скользкие поверхности\", \"Одиночество в толпе\", \"Тяжелые решения\", \"Глубокие водоемы\", \"Отсутствие звуков\", \"Потеря памяти\", \"Летящие объекты\", \"Силы природы\", \"Далекое будущее\", \"Невозможность двигаться\", \"Неизвестность\", \"Тени\", \"Силы темных искусств\", \"Заброшенные места\", \"Заболевания\", \"Болезни разума\"],\r\n    backpack: [\"18\", \"20\", \"25\", \"27\", \"30\", \"32\", \"35\", \"40\"],\r\n    fact: [\"18\", \"20\", \"25\", \"27\", \"30\", \"32\", \"35\", \"40\"],\r\n  };\r\n  let usedAttributes = {\r\n    profession: new Set(),\r\n    hobby: new Set(),\r\n    age: new Set(),\r\n    phobia: new Set(),\r\n    health: new Set(),\r\n  };\r\n  \r\n  const shuffleArray = (array) => {\r\n    const shuffled = [...array];\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    return shuffled;\r\n  };\r\n  \r\n  const generateRandomAttributes = () => {\r\n    const selectedAttributes = {};\r\n  \r\n    // Для здоровья выбираем случайное заболевание и его тяжесть\r\n    const availableHealth = attributesPool.health.filter(\r\n      (item) => !usedAttributes.health.has(item.name)\r\n    );\r\n    \r\n    if (availableHealth.length === 0) {\r\n      selectedAttributes.health = null; // Если все заболевания использованы, ставим null\r\n    } else {\r\n      const shuffledHealth = shuffleArray(availableHealth);\r\n      const selectedHealth = shuffledHealth.pop();\r\n      selectedAttributes.health = {\r\n        disease: selectedHealth.name,\r\n        severity: selectedHealth.severity + \"%\",\r\n      };\r\n      usedAttributes.health.add(selectedHealth.name);\r\n    }\r\n  \r\n    // Для других атрибутов выбираем случайное значение, исключая уже использованные\r\n    Object.keys(attributesPool).forEach((key) => {\r\n      if (key !== \"health\") {\r\n        const availableValues = attributesPool[key].filter(\r\n          (value) => !usedAttributes[key].has(value)\r\n        );\r\n        if (availableValues.length > 0) {\r\n          const shuffled = shuffleArray(availableValues);\r\n          const selectedValue = shuffled.pop();\r\n          selectedAttributes[key] = selectedValue;\r\n          usedAttributes[key].add(selectedValue); // Помечаем выбранное значение как использованное\r\n        } else {\r\n          selectedAttributes[key] = null; // Если все значения использованы, ставим null\r\n        }\r\n      }\r\n    });\r\n  \r\n    return selectedAttributes;\r\n  };\r\n  \r\n  export default generateRandomAttributes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}