{"ast":null,"code":"// randomAttributes.js\n\nconst attributesPool = {\n  health: [{\n    name: \"Остудное заболевание (простуда)\",\n    severity: 10\n  }, {\n    name: \"Грипп\",\n    severity: 10\n  }, {\n    name: \"Ангина (тонзиллит)\",\n    severity: 15\n  }, {\n    name: \"Бронхит\",\n    severity: 15\n  }, {\n    name: \"Гастрит\",\n    severity: 20\n  }, {\n    name: \"Диабет 2 типа\",\n    severity: 25\n  }, {\n    name: \"Гипертония (высокое давление)\",\n    severity: 30\n  }, {\n    name: \"Астма\",\n    severity: 30\n  }, {\n    name: \"Пневмония\",\n    severity: 40\n  }, {\n    name: \"Инсульт\",\n    severity: 50\n  }, {\n    name: \"Инфаркт миокарда\",\n    severity: 50\n  }, {\n    name: \"Рак кожи\",\n    severity: 70\n  }, {\n    name: \"Рак легких\",\n    severity: 70\n  }, {\n    name: \"Рак груди\",\n    severity: 70\n  }, {\n    name: \"Болезнь Альцгеймера\",\n    severity: 40\n  }, {\n    name: \"Паркинсон\",\n    severity: 40\n  }, {\n    name: \"Ревматоидный артрит\",\n    severity: 25\n  }, {\n    name: \"Туберкулез\",\n    severity: 30\n  }, {\n    name: \"Сердечная недостаточность\",\n    severity: 50\n  }, {\n    name: \"Цирроз печени\",\n    severity: 50\n  }, {\n    name: \"Печеночная недостаточность\",\n    severity: 50\n  }, {\n    name: \"Хроническая обструктивная болезнь легких (ХОБЛ)\",\n    severity: 40\n  }, {\n    name: \"Миокардит\",\n    severity: 30\n  }, {\n    name: \"Гепатит B\",\n    severity: 20\n  }, {\n    name: \"Гепатит C\",\n    severity: 30\n  }, {\n    name: \"Молниеносная инфекция (сепсис)\",\n    severity: 50\n  }, {\n    name: \"Менингит\",\n    severity: 40\n  }, {\n    name: \"Эпилепсия\",\n    severity: 25\n  }, {\n    name: \"Шизофрения\",\n    severity: 30\n  }, {\n    name: \"Психоз\",\n    severity: 30\n  }, {\n    name: \"Сахарный диабет 1 типа\",\n    severity: 30\n  }, {\n    name: \"Инфекционный мононуклеоз\",\n    severity: 20\n  }, {\n    name: \"Панкреатит\",\n    severity: 30\n  }, {\n    name: \"Псориаз\",\n    severity: 20\n  }, {\n    name: \"Склероз\",\n    severity: 30\n  }, {\n    name: \"Тромбофлебит\",\n    severity: 25\n  }, {\n    name: \"Полиартрит\",\n    severity: 30\n  }, {\n    name: \"Геморрой\",\n    severity: 10\n  }, {\n    name: \"Невралгия\",\n    severity: 15\n  }, {\n    name: \"Глаукома\",\n    severity: 20\n  }, {\n    name: \"Аллергия\",\n    severity: 10\n  }, {\n    name: \"Гастроэзофагеальная рефлюксная болезнь (ГЭРБ)\",\n    severity: 20\n  }, {\n    name: \"Хронический синусит\",\n    severity: 15\n  }, {\n    name: \"Псевдотумор мозга\",\n    severity: 40\n  }, {\n    name: \"Анемия\",\n    severity: 20\n  }, {\n    name: \"Паралич\",\n    severity: 50\n  }, {\n    name: \"Ожирение\",\n    severity: 25\n  }, {\n    name: \"Гепатит D\",\n    severity: 20\n  }, {\n    name: \"Токсоплазмоз\",\n    severity: 15\n  }, {\n    name: \"Хроническая усталость\",\n    severity: 15\n  }, {\n    name: \"Параноидальная шизофрения\",\n    severity: 30\n  }, {\n    name: \"Миастения\",\n    severity: 25\n  }, {\n    name: \"Тромбоцитопения\",\n    severity: 20\n  }, {\n    name: \"Туберкулез кожи\",\n    severity: 20\n  }, {\n    name: \"Псевдопаралич\",\n    severity: 40\n  }, {\n    name: \"Болезнь Крона\",\n    severity: 30\n  }, {\n    name: \"Цистит\",\n    severity: 15\n  }, {\n    name: \"Полимиозит\",\n    severity: 30\n  }, {\n    name: \"Гломерулонефрит\",\n    severity: 25\n  }, {\n    name: \"Кистозная фиброз\",\n    severity: 30\n  }, {\n    name: \"Склеродермия\",\n    severity: 30\n  }, {\n    name: \"Аутоиммунный тиреоидит\",\n    severity: 25\n  }, {\n    name: \"Гипотиреоз\",\n    severity: 20\n  }, {\n    name: \"Гипертиреоз\",\n    severity: 20\n  }, {\n    name: \"Печеночный рак\",\n    severity: 50\n  }, {\n    name: \"Ожог 3 степени\",\n    severity: 40\n  }, {\n    name: \"Миокардиальная ишемия\",\n    severity: 30\n  }, {\n    name: \"Инфекционный эндокардит\",\n    severity: 40\n  }, {\n    name: \"Мочекаменная болезнь\",\n    severity: 20\n  }, {\n    name: \"Гипогликемия\",\n    severity: 15\n  }],\n  profession: [\"Врач\", \"Инженер\", \"Учитель\", \"Художник\", \"Повар\", \"Программист\"],\n  hobby: [\"Рисование\", \"Чтение\", \"Спорт\", \"Музыка\", \"Путешествия\", \"Готовка\"],\n  age: [\"18\", \"25\", \"30\", \"40\", \"50\", \"60\"],\n  phobia: [\"Замкнутые пространства\", \"Высота\", \"Темнота\", \"Насекомые\", \"Толпа\", \"Одиночество\"],\n  backpack: [{\n    name: \"Фонарик\"\n  }, {\n    name: \"Нож\"\n  }, {\n    name: \"Аптечка\"\n  }, {\n    name: \"Вода\"\n  }, {\n    name: \"Пища\"\n  }, {\n    name: \"Теплая одежда\"\n  }, {\n    name: \"Спальный мешок\"\n  }],\n  fact: [\"Люблю путешествовать\", \"Я учёный\", \"У меня есть собака\", \"Я играю на гитаре\", \"Я фанат спорта\"] // Факт\n};\nlet usedAttributes = {\n  profession: new Set(),\n  hobby: new Set(),\n  age: new Set(),\n  phobia: new Set(),\n  backpack: new Set(),\n  backpack: new Set()\n};\nconst shuffleArray = array => {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n};\nconst generateRandomAttributes = () => {\n  const selectedAttributes = {};\n\n  // Для рюкзака выбираем случайный предмет\n  const availableBackpack = attributesPool.backpack.filter(item => usedAttributes.backpack && !usedAttributes.backpack.has(item.name));\n  const shuffledBackpack = shuffleArray(availableBackpack);\n  const selectedBackpack = shuffledBackpack.pop();\n  selectedAttributes.backpack = selectedBackpack.name;\n  usedAttributes.backpack.add(selectedBackpack.name);\n\n  // Для других атрибутов выбираем случайное значение, исключая уже использованные\n  Object.keys(attributesPool).forEach(key => {\n    if (key !== \"backpack\") {\n      const availableValues = attributesPool[key].filter(value => usedAttributes[key] && !usedAttributes[key].has(value));\n      if (availableValues.length > 0) {\n        const shuffled = shuffleArray(availableValues);\n        const selectedValue = shuffled.pop();\n        selectedAttributes[key] = selectedValue;\n        usedAttributes[key].add(selectedValue); // Помечаем выбранное значение как использованное\n      } else {\n        selectedAttributes[key] = null; // Если все значения использованы, ставим null\n      }\n    }\n  });\n  return selectedAttributes;\n};\nexport default generateRandomAttributes;","map":{"version":3,"names":["attributesPool","health","name","severity","profession","hobby","age","phobia","backpack","fact","usedAttributes","Set","shuffleArray","array","shuffled","i","length","j","Math","floor","random","generateRandomAttributes","selectedAttributes","availableBackpack","filter","item","has","shuffledBackpack","selectedBackpack","pop","add","Object","keys","forEach","key","availableValues","value","selectedValue"],"sources":["C:/bunker/src/randomAttributes.jsx"],"sourcesContent":["// randomAttributes.js\r\n\r\nconst attributesPool = {\r\n    health: [\r\n      { name: \"Остудное заболевание (простуда)\", severity: 10 },\r\n      { name: \"Грипп\", severity: 10 },\r\n      { name: \"Ангина (тонзиллит)\", severity: 15 },\r\n      { name: \"Бронхит\", severity: 15 },\r\n      { name: \"Гастрит\", severity: 20 },\r\n      { name: \"Диабет 2 типа\", severity: 25 },\r\n      { name: \"Гипертония (высокое давление)\", severity: 30 },\r\n      { name: \"Астма\", severity: 30 },\r\n      { name: \"Пневмония\", severity: 40 },\r\n      { name: \"Инсульт\", severity: 50 },\r\n      { name: \"Инфаркт миокарда\", severity: 50 },\r\n      { name: \"Рак кожи\", severity: 70 },\r\n      { name: \"Рак легких\", severity: 70 },\r\n      { name: \"Рак груди\", severity: 70 },\r\n      { name: \"Болезнь Альцгеймера\", severity: 40 },\r\n      { name: \"Паркинсон\", severity: 40 },\r\n      { name: \"Ревматоидный артрит\", severity: 25 },\r\n      { name: \"Туберкулез\", severity: 30 },\r\n      { name: \"Сердечная недостаточность\", severity: 50 },\r\n      { name: \"Цирроз печени\", severity: 50 },\r\n      { name: \"Печеночная недостаточность\", severity: 50 },\r\n      { name: \"Хроническая обструктивная болезнь легких (ХОБЛ)\", severity: 40 },\r\n      { name: \"Миокардит\", severity: 30 },\r\n      { name: \"Гепатит B\", severity: 20 },\r\n      { name: \"Гепатит C\", severity: 30 },\r\n      { name: \"Молниеносная инфекция (сепсис)\", severity: 50 },\r\n      { name: \"Менингит\", severity: 40 },\r\n      { name: \"Эпилепсия\", severity: 25 },\r\n      { name: \"Шизофрения\", severity: 30 },\r\n      { name: \"Психоз\", severity: 30 },\r\n      { name: \"Сахарный диабет 1 типа\", severity: 30 },\r\n      { name: \"Инфекционный мононуклеоз\", severity: 20 },\r\n      { name: \"Панкреатит\", severity: 30 },\r\n      { name: \"Псориаз\", severity: 20 },\r\n      { name: \"Склероз\", severity: 30 },\r\n      { name: \"Тромбофлебит\", severity: 25 },\r\n      { name: \"Полиартрит\", severity: 30 },\r\n      { name: \"Геморрой\", severity: 10 },\r\n      { name: \"Невралгия\", severity: 15 },\r\n      { name: \"Глаукома\", severity: 20 },\r\n      { name: \"Аллергия\", severity: 10 },\r\n      { name: \"Гастроэзофагеальная рефлюксная болезнь (ГЭРБ)\", severity: 20 },\r\n      { name: \"Хронический синусит\", severity: 15 },\r\n      { name: \"Псевдотумор мозга\", severity: 40 },\r\n      { name: \"Анемия\", severity: 20 },\r\n      { name: \"Паралич\", severity: 50 },\r\n      { name: \"Ожирение\", severity: 25 },\r\n      { name: \"Гепатит D\", severity: 20 },\r\n      { name: \"Токсоплазмоз\", severity: 15 },\r\n      { name: \"Хроническая усталость\", severity: 15 },\r\n      { name: \"Параноидальная шизофрения\", severity: 30 },\r\n      { name: \"Миастения\", severity: 25 },\r\n      { name: \"Тромбоцитопения\", severity: 20 },\r\n      { name: \"Туберкулез кожи\", severity: 20 },\r\n      { name: \"Псевдопаралич\", severity: 40 },\r\n      { name: \"Болезнь Крона\", severity: 30 },\r\n      { name: \"Цистит\", severity: 15 },\r\n      { name: \"Полимиозит\", severity: 30 },\r\n      { name: \"Гломерулонефрит\", severity: 25 },\r\n      { name: \"Кистозная фиброз\", severity: 30 },\r\n      { name: \"Склеродермия\", severity: 30 },\r\n      { name: \"Аутоиммунный тиреоидит\", severity: 25 },\r\n      { name: \"Гипотиреоз\", severity: 20 },\r\n      { name: \"Гипертиреоз\", severity: 20 },\r\n      { name: \"Печеночный рак\", severity: 50 },\r\n      { name: \"Ожог 3 степени\", severity: 40 },\r\n      { name: \"Миокардиальная ишемия\", severity: 30 },\r\n      { name: \"Инфекционный эндокардит\", severity: 40 },\r\n      { name: \"Мочекаменная болезнь\", severity: 20 },\r\n      { name: \"Гипогликемия\", severity: 15 },\r\n    ],\r\n    profession: [\"Врач\", \"Инженер\", \"Учитель\", \"Художник\", \"Повар\", \"Программист\"],\r\n    hobby: [\"Рисование\", \"Чтение\", \"Спорт\", \"Музыка\", \"Путешествия\", \"Готовка\"],\r\n    age: [\"18\", \"25\", \"30\", \"40\", \"50\", \"60\"],\r\n    phobia: [\"Замкнутые пространства\", \"Высота\", \"Темнота\", \"Насекомые\", \"Толпа\", \"Одиночество\"],\r\n    backpack: [\r\n        { name: \"Фонарик\" },\r\n        { name: \"Нож\" },\r\n        { name: \"Аптечка\" },\r\n        { name: \"Вода\" },\r\n        { name: \"Пища\" },\r\n        { name: \"Теплая одежда\" },\r\n        { name: \"Спальный мешок\" },\r\n      ],   \r\n      fact: [\"Люблю путешествовать\", \"Я учёный\", \"У меня есть собака\", \"Я играю на гитаре\", \"Я фанат спорта\"], // Факт\r\n  };\r\n  \r\n\r\nlet usedAttributes = {\r\n  profession: new Set(),\r\n  hobby: new Set(),\r\n  age: new Set(),\r\n  phobia: new Set(),\r\n  backpack: new Set(),\r\n  backpack: new Set(),\r\n};\r\n\r\nconst shuffleArray = (array) => {\r\n  const shuffled = [...array];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n  }\r\n  return shuffled;\r\n};\r\n\r\nconst generateRandomAttributes = () => {\r\n    const selectedAttributes = {};\r\n  \r\n    // Для рюкзака выбираем случайный предмет\r\n    const availableBackpack = attributesPool.backpack.filter(\r\n      (item) => usedAttributes.backpack && !usedAttributes.backpack.has(item.name)\r\n    );\r\n    const shuffledBackpack = shuffleArray(availableBackpack);\r\n    const selectedBackpack = shuffledBackpack.pop();\r\n    selectedAttributes.backpack = selectedBackpack.name;\r\n    usedAttributes.backpack.add(selectedBackpack.name);\r\n  \r\n    // Для других атрибутов выбираем случайное значение, исключая уже использованные\r\n    Object.keys(attributesPool).forEach((key) => {\r\n      if (key !== \"backpack\") {\r\n        const availableValues = attributesPool[key].filter(\r\n          (value) => usedAttributes[key] && !usedAttributes[key].has(value)\r\n        );\r\n        if (availableValues.length > 0) {\r\n          const shuffled = shuffleArray(availableValues);\r\n          const selectedValue = shuffled.pop();\r\n          selectedAttributes[key] = selectedValue;\r\n          usedAttributes[key].add(selectedValue); // Помечаем выбранное значение как использованное\r\n        } else {\r\n          selectedAttributes[key] = null; // Если все значения использованы, ставим null\r\n        }\r\n      }\r\n    });\r\n  \r\n    return selectedAttributes;\r\n  };\r\n\r\n  export default generateRandomAttributes;"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,GAAG;EACnBC,MAAM,EAAE,CACN;IAAEC,IAAI,EAAE,iCAAiC;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACzD;IAAED,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC/B;IAAED,IAAI,EAAE,oBAAoB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC5C;IAAED,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACjC;IAAED,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACjC;IAAED,IAAI,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACvC;IAAED,IAAI,EAAE,+BAA+B;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACvD;IAAED,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC/B;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACjC;IAAED,IAAI,EAAE,kBAAkB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC1C;IAAED,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACpC;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,qBAAqB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC7C;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,qBAAqB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC7C;IAAED,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACpC;IAAED,IAAI,EAAE,2BAA2B;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnD;IAAED,IAAI,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACvC;IAAED,IAAI,EAAE,4BAA4B;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACpD;IAAED,IAAI,EAAE,iDAAiD;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACzE;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,gCAAgC;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACxD;IAAED,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACpC;IAAED,IAAI,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAChC;IAAED,IAAI,EAAE,wBAAwB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAChD;IAAED,IAAI,EAAE,0BAA0B;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAClD;IAAED,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACpC;IAAED,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACjC;IAAED,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACjC;IAAED,IAAI,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACtC;IAAED,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACpC;IAAED,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,+CAA+C;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACvE;IAAED,IAAI,EAAE,qBAAqB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC7C;IAAED,IAAI,EAAE,mBAAmB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC3C;IAAED,IAAI,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAChC;IAAED,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACjC;IAAED,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACtC;IAAED,IAAI,EAAE,uBAAuB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC/C;IAAED,IAAI,EAAE,2BAA2B;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnD;IAAED,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,iBAAiB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACzC;IAAED,IAAI,EAAE,iBAAiB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACzC;IAAED,IAAI,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACvC;IAAED,IAAI,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACvC;IAAED,IAAI,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAChC;IAAED,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACpC;IAAED,IAAI,EAAE,iBAAiB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACzC;IAAED,IAAI,EAAE,kBAAkB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC1C;IAAED,IAAI,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACtC;IAAED,IAAI,EAAE,wBAAwB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAChD;IAAED,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACpC;IAAED,IAAI,EAAE,aAAa;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACrC;IAAED,IAAI,EAAE,gBAAgB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACxC;IAAED,IAAI,EAAE,gBAAgB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACxC;IAAED,IAAI,EAAE,uBAAuB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC/C;IAAED,IAAI,EAAE,yBAAyB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACjD;IAAED,IAAI,EAAE,sBAAsB;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC9C;IAAED,IAAI,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAG,CAAC,CACvC;EACDC,UAAU,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,aAAa,CAAC;EAC9EC,KAAK,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,CAAC;EAC3EC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACzCC,MAAM,EAAE,CAAC,wBAAwB,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,aAAa,CAAC;EAC5FC,QAAQ,EAAE,CACN;IAAEN,IAAI,EAAE;EAAU,CAAC,EACnB;IAAEA,IAAI,EAAE;EAAM,CAAC,EACf;IAAEA,IAAI,EAAE;EAAU,CAAC,EACnB;IAAEA,IAAI,EAAE;EAAO,CAAC,EAChB;IAAEA,IAAI,EAAE;EAAO,CAAC,EAChB;IAAEA,IAAI,EAAE;EAAgB,CAAC,EACzB;IAAEA,IAAI,EAAE;EAAiB,CAAC,CAC3B;EACDO,IAAI,EAAE,CAAC,sBAAsB,EAAE,UAAU,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,gBAAgB,CAAC,CAAE;AAC7G,CAAC;AAGH,IAAIC,cAAc,GAAG;EACnBN,UAAU,EAAE,IAAIO,GAAG,CAAC,CAAC;EACrBN,KAAK,EAAE,IAAIM,GAAG,CAAC,CAAC;EAChBL,GAAG,EAAE,IAAIK,GAAG,CAAC,CAAC;EACdJ,MAAM,EAAE,IAAII,GAAG,CAAC,CAAC;EACjBH,QAAQ,EAAE,IAAIG,GAAG,CAAC,CAAC;EACnBH,QAAQ,EAAE,IAAIG,GAAG,CAAC;AACpB,CAAC;AAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,QAAQ,GAAG,CAAC,GAAGD,KAAK,CAAC;EAC3B,KAAK,IAAIE,CAAC,GAAGD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC5C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,QAAQ,CAACC,CAAC,CAAC,EAAED,QAAQ,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,QAAQ,CAACG,CAAC,CAAC,EAAEH,QAAQ,CAACC,CAAC,CAAC,CAAC;EACzD;EACA,OAAOD,QAAQ;AACjB,CAAC;AAED,MAAMO,wBAAwB,GAAGA,CAAA,KAAM;EACnC,MAAMC,kBAAkB,GAAG,CAAC,CAAC;;EAE7B;EACA,MAAMC,iBAAiB,GAAGvB,cAAc,CAACQ,QAAQ,CAACgB,MAAM,CACrDC,IAAI,IAAKf,cAAc,CAACF,QAAQ,IAAI,CAACE,cAAc,CAACF,QAAQ,CAACkB,GAAG,CAACD,IAAI,CAACvB,IAAI,CAC7E,CAAC;EACD,MAAMyB,gBAAgB,GAAGf,YAAY,CAACW,iBAAiB,CAAC;EACxD,MAAMK,gBAAgB,GAAGD,gBAAgB,CAACE,GAAG,CAAC,CAAC;EAC/CP,kBAAkB,CAACd,QAAQ,GAAGoB,gBAAgB,CAAC1B,IAAI;EACnDQ,cAAc,CAACF,QAAQ,CAACsB,GAAG,CAACF,gBAAgB,CAAC1B,IAAI,CAAC;;EAElD;EACA6B,MAAM,CAACC,IAAI,CAAChC,cAAc,CAAC,CAACiC,OAAO,CAAEC,GAAG,IAAK;IAC3C,IAAIA,GAAG,KAAK,UAAU,EAAE;MACtB,MAAMC,eAAe,GAAGnC,cAAc,CAACkC,GAAG,CAAC,CAACV,MAAM,CAC/CY,KAAK,IAAK1B,cAAc,CAACwB,GAAG,CAAC,IAAI,CAACxB,cAAc,CAACwB,GAAG,CAAC,CAACR,GAAG,CAACU,KAAK,CAClE,CAAC;MACD,IAAID,eAAe,CAACnB,MAAM,GAAG,CAAC,EAAE;QAC9B,MAAMF,QAAQ,GAAGF,YAAY,CAACuB,eAAe,CAAC;QAC9C,MAAME,aAAa,GAAGvB,QAAQ,CAACe,GAAG,CAAC,CAAC;QACpCP,kBAAkB,CAACY,GAAG,CAAC,GAAGG,aAAa;QACvC3B,cAAc,CAACwB,GAAG,CAAC,CAACJ,GAAG,CAACO,aAAa,CAAC,CAAC,CAAC;MAC1C,CAAC,MAAM;QACLf,kBAAkB,CAACY,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;MAClC;IACF;EACF,CAAC,CAAC;EAEF,OAAOZ,kBAAkB;AAC3B,CAAC;AAED,eAAeD,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}